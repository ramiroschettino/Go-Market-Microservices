services:
  postgres:
    image: postgres:14
    container_name: pg-products
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: products_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d products_db"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    networks:
      - market-net

  products-service:
    build:
      context: .
      dockerfile: products-service/Dockerfile
    container_name: products-service
    ports:
      - "50051:50051"
    depends_on:
      postgres:
        condition: service_started
    environment:
      DB_HOST: pg-products
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: products_db
      DB_PORT: "5432"
      DB_MAX_RETRIES: "10"
      DB_RETRY_DELAY: "5"
    healthcheck:
      test: ["CMD-SHELL", "grpc_health_probe -addr=:50051"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - market-net
    restart: unless-stopped

  orders-service:
    build:
      context: .
      dockerfile: orders-service/Dockerfile
    container_name: orders-service
    ports:
      - "50052:50052" 
    depends_on:
      postgres:
        condition: service_started
      products-service:
        condition: service_started
    environment:
      DB_HOST: pg-products
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: products_db
      DB_PORT: "5432"
      PRODUCTS_SERVICE_URL: "products-service:50051"
      DB_MAX_RETRIES: "10"
      DB_RETRY_DELAY: "5"
    healthcheck:
      test: ["CMD-SHELL", "grpc_health_probe -addr=:50052 || wget -q -O - http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - market-net
    restart: unless-stopped

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"  
    depends_on:
      orders-service:
        condition: service_started
    environment:
      ORDER_SERVICE_ADDRESS: "orders-service:50052"
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - market-net
    restart: unless-stopped

networks:
  market-net:
    driver: bridge

volumes:
  pgdata: